<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qztc.appdemo.mapper.LeaveMapper" >
  <resultMap id="BaseResultMap" type="com.qztc.appdemo.model.Leave" >
    <id column="leave_id" property="leaveId" jdbcType="INTEGER" />
    <result column="student_sno" property="studentSno" jdbcType="INTEGER" />
    <result column="leave_reason" property="leaveReason" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="coundelor_id" property="coundelorId" jdbcType="INTEGER" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    leave_id, student_sno, leave_reason, start_time, end_time, coundelor_id, is_read
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from leave
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from leave
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qztc.appdemo.model.Leave" >
    insert into leave (leave_id, student_sno, leave_reason, 
      start_time, end_time, coundelor_id, 
      is_read)
    values (#{leaveId,jdbcType=INTEGER}, #{studentSno,jdbcType=INTEGER}, #{leaveReason,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, #{coundelorId,jdbcType=INTEGER}, 
      #{isRead,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qztc.appdemo.model.Leave" >
    insert into leave
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="leaveId != null" >
        leave_id,
      </if>
      <if test="studentSno != null" >
        student_sno,
      </if>
      <if test="leaveReason != null" >
        leave_reason,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="coundelorId != null" >
        coundelor_id,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="leaveId != null" >
        #{leaveId,jdbcType=INTEGER},
      </if>
      <if test="studentSno != null" >
        #{studentSno,jdbcType=INTEGER},
      </if>
      <if test="leaveReason != null" >
        #{leaveReason,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="coundelorId != null" >
        #{coundelorId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qztc.appdemo.model.Leave" >
    update leave
    <set >
      <if test="studentSno != null" >
        student_sno = #{studentSno,jdbcType=INTEGER},
      </if>
      <if test="leaveReason != null" >
        leave_reason = #{leaveReason,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="coundelorId != null" >
        coundelor_id = #{coundelorId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
    </set>
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qztc.appdemo.model.Leave" >
    update leave
    set student_sno = #{studentSno,jdbcType=INTEGER},
      leave_reason = #{leaveReason,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      coundelor_id = #{coundelorId,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=INTEGER}
    where leave_id = #{leaveId,jdbcType=INTEGER}
  </update>
</mapper>